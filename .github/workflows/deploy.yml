name: Deploy and Test

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Deploy to Staging
        id: deploy-to-staging
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_HOBBY_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        env:
          VEL_TOKEN: ${{ secrets.VERCEL_HOBBY_TOKEN }}
        continue-on-error: true
        run: |
          BetaHuhn/deploy-to-vercel-action@v1 2>&1 | tee deploy.log
      - name: Extract Staging URL
        id: extract-staging-url
        run: |
          STAGING_URL=$(grep -oP 'available at: \Khttps://\S+' deploy.log)
          echo "STAGING_URL=$STAGING_URL" >> $GITHUB_ENV
          echo "::set-output name=staging_url::$STAGING_URL"
      - name: Validate Staging URL
        if: steps.extract-staging-url.outputs.staging_url == 'null'
        run: |
          echo "Failed to retrieve STAGING_URL"
          exit 1
      - name: Trigger playwright.yml
        if: success()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: trigger-playwright
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "stagingUrl": "${{ env.STAGING_URL }}"}'
